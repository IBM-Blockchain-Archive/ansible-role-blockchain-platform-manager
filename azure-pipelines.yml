#
# SPDX-License-Identifier: Apache-2.0
#
---
pool:
  vmImage: "ubuntu-latest"

variables:
  FABRIC_CFG_PATH: /usr/local/config

steps:
  - script: sudo apt-get update && sudo apt-get install -y moreutils
    displayName: Install Ubuntu dependencies
  - task: UsePythonVersion@0
    inputs:
      versionSpec: "3.x"
    displayName: Use Python 3.x
  - script: pip install ansible ansible-lint docker yamllint
    displayName: Install Python dependencies
  - script: |
      set -ex
      mvn dependency:get -DremoteRepositories=https://nexus.hyperledger.org/content/repositories/snapshots -Dartifact=org.hyperledger.fabric:hyperledger-fabric-1.4.4-stable:linux-amd64.1.4.4-stable-SNAPSHOT:tar.gz
      mvn dependency:copy -Dartifact=org.hyperledger.fabric:hyperledger-fabric-1.4.4-stable:linux-amd64.1.4.4-stable-SNAPSHOT:tar.gz -DoutputDirectory=/tmp
      cd /usr/local
      sudo tar xzvf /tmp/hyperledger-fabric-1.4.4-stable-linux-amd64.1.4.4-stable-SNAPSHOT.tar.gz
    displayName: Download Fabric CLI
  - script: |
      set -ex
      mvn dependency:get -DremoteRepositories=https://nexus.hyperledger.org/content/repositories/snapshots -Dartifact=org.hyperledger.fabric-ca:hyperledger-fabric-ca-1.4.4-stable:linux-amd64.1.4.4-stable-SNAPSHOT:tar.gz
      mvn dependency:copy -Dartifact=org.hyperledger.fabric-ca:hyperledger-fabric-ca-1.4.4-stable:linux-amd64.1.4.4-stable-SNAPSHOT:tar.gz -DoutputDirectory=/tmp
      cd /usr/local
      sudo tar xzvf /tmp/hyperledger-fabric-ca-1.4.4-stable-linux-amd64.1.4.4-stable-SNAPSHOT.tar.gz
    displayName: Download Fabric CA CLI
  - script: |
      set -ex
      ansible-lint .
      yamllint .
    displayName: Lint
  - script: docker/build.sh
    displayName: Build Docker image
  - script: |
      set -ex
      mkdir -p ~/.ansible/roles
      ln -s $(Build.Repository.LocalPath) ~/.ansible/roles/ibm.blockchain_platform_manager
    displayName: Link Playbook dependencies
  - script: |
      set -ex
      ansible-playbook tests/test.yml
      ansible-playbook --extra-vars "state=absent" tests/test.yml
    displayName: Run Playbook tests
  - script: |
      set -ex
      ansible-galaxy login --github-token=$(GitHub Token)
      ansible-galaxy import IBM-Blockchain ansible-role-blockchain-platform-manager
    condition: ne(variables['Build.Reason'], 'PullRequest')
    displayName: Publish to Ansible Galaxy